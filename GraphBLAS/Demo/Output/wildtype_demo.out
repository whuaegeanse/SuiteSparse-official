 [ GxB_Type_new 
   9.48e-06 sec ]
    GraphBLAS type: WildType user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
WildType size: 192
    GraphBLAS type: WildType user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;

a wildtype scalar: scalar1 [this is from scalar1]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      203.0 
     300.0      301.0      302.0      303.0 
(iso wait:C (setElement:to non-iso) 0 zombies, 1 pending)  [ GrB_transpose (wait:A 0 zombies, 2 pending) (build) (jit: compile and load) (jit: sh -c "/usr/bin/cc -DGB_JIT_RUNTIME=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/faculty/d/davis/.SuiteSparse/GrB9.0.0/src  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/de/GB_jit__build__02eeeee__wildtype.o -c /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/de/GB_jit__build__02eeeee__wildtype.c    ; /usr/bin/cc  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/lib/de/libGB_jit__build__02eeeee__wildtype.so /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/de/GB_jit__build__02eeeee__wildtype.o  -lm -ldl -lgomp -lpthread   ") add:(H<.>=H+H) (jit: compile and load) (jit: sh -c "/usr/bin/cc -DGB_JIT_RUNTIME=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/faculty/d/davis/.SuiteSparse/GrB9.0.0/src  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/77/GB_jit__add__1002e0e0eee00__wildtype.o -c /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/77/GB_jit__add__1002e0e0eee00__wildtype.c    ; /usr/bin/cc  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/lib/77/libGB_jit__add__1002e0e0eee00__wildtype.so /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/77/GB_jit__add__1002e0e0eee00__wildtype.o  -lm -ldl -lgomp -lpthread   ") (hyper to sparse) (transpose) (builder transpose) (hyper to sparse) 
   0.556 sec ]

a wildtype scalar: got scalar2 = C(7,2) [this is A(2,7)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      203.0 
     300.0      301.0      302.0      303.0 

    GraphBLAS BinaryOp: WildAdd (user-defined): z=wildadd(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
void wildadd (wildtype *z, const wildtype *x, const wildtype *y)       
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = x->stuff [i][j] + y->stuff [i][j] ;       
       }                                                               
   }                                                                   
   const char *psrc = "this was added" ;                             
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}

    GraphBLAS BinaryOp: WildMult (user-defined): z=wildmult(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
void wildmult (wildtype *z, const wildtype *x, const wildtype *y)      
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = 0 ;                                       
           for (int k = 0 ; k < 4 ; k++)                               
           {                                                           
               z->stuff [i][j] += (x->stuff [i][k] * y->stuff [k][j]) ;
           }                                                           
       }                                                               
   }                                                                   
   const char *psrc = "this was multiplied" ;                        
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}

a wildtype scalar: scalar2 [here is scalar2]
       0.5        1.5        2.5        3.5 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 
(iso wait:C (setElement:to non-iso) 0 zombies, 1 pending) 
a wildtype scalar: scalar_identity for the monoid [identity]
       0.0        0.0        0.0        0.0 
       0.0        0.0        0.0        0.0 
       0.0        0.0        0.0        0.0 
       0.0        0.0        0.0        0.0 

    GraphBLAS Semiring: InTheWild (user-defined): (wildadd_wildmult)
    GraphBLAS Monoid: semiring->add (user-defined):
    GraphBLAS BinaryOp: monoid->op (user-defined): z=wildadd(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
void wildadd (wildtype *z, const wildtype *x, const wildtype *y)       
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = x->stuff [i][j] + y->stuff [i][j] ;       
       }                                                               
   }                                                                   
   const char *psrc = "this was added" ;                             
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}
    identity: [ [user-defined value] ] 

    GraphBLAS BinaryOp: semiring->multiply (user-defined): z=wildmult(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
void wildmult (wildtype *z, const wildtype *x, const wildtype *y)      
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = 0 ;                                       
           for (int k = 0 ; k < 4 ; k++)                               
           {                                                           
               z->stuff [i][j] += (x->stuff [i][k] * y->stuff [k][j]) ;
           }                                                           
       }                                                               
   }                                                                   
   const char *psrc = "this was multiplied" ;                        
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}

multiplication C=A*B InTheWild semiring:

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by row
  input A, 3 entries, memory: 920 bytes

    (2,4) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]

 [ GrB_Matrix_nvals 
   1.11e-06 sec ]

============= printing the WildType matrix: input A (10-by-10 with 3 entries)

----------- input A(2,4):

a wildtype scalar:  [this is A(2,4)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      909.0 
     300.0      301.0      302.0       42.0 

----------- input A(2,7):

a wildtype scalar:  [this is A(2,7)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      203.0 
     300.0      301.0      302.0      303.0 

----------- input A(3,7):

a wildtype scalar:  [this is A(3,7)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      909.0 
     300.0      301.0      302.0      303.0 

============= that was the WildType matrix input A

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, hypersparse by row
  input B, 1 entry, memory: 52.5 KB
  pending tuples: 2 max pending: 256 zombies: 0

    (7,2) [user-defined value]
  pending tuples:
    GraphBLAS type:  user-defined: [wildtype] size: 192
    typedef struct { double stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    row: 7 col: 5 [user-defined value]
    row: 4 col: 2 [user-defined value]
  pending operator: implicit 2nd

 [ GrB_Matrix_nvals (wait:A 0 zombies, 2 pending) (build) add:(H<.>=H+H) (hyper to sparse) 
   0.000173 sec ]

============= printing the WildType matrix: input B (10-by-10 with 3 entries)

----------- input B(4,2):

a wildtype scalar:  [finally, B(4,2)]
      -1.0        1.5        2.5       77.0 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 

----------- input B(7,2):

a wildtype scalar:  [this is B(7,2)]
       0.5        1.5        2.5        3.5 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 

----------- input B(7,5):

a wildtype scalar:  [here is B(7,5)]
      -1.0        1.5        2.5        3.5 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 

============= that was the WildType matrix input B
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3 bnz: 3) axbwork 8 (intensity: 1.14 workspace/(nnz(A)+nnz(B)): 1.43) (nthreads 1 coarse: 1) (sparse saxpy) (jit: compile and load) (jit: sh -c "/usr/bin/cc -DGB_JIT_RUNTIME=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/faculty/d/davis/.SuiteSparse/GrB9.0.0/src  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/21/GB_jit__AxB_saxpy3__03fe100eee0eee45__wildadd_wildmult.o -c /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/21/GB_jit__AxB_saxpy3__03fe100eee0eee45__wildadd_wildmult.c    ; /usr/bin/cc  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/lib/21/libGB_jit__AxB_saxpy3__03fe100eee0eee45__wildadd_wildmult.so /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/21/GB_jit__AxB_saxpy3__03fe100eee0eee45__wildadd_wildmult.o  -lm -ldl -lgomp -lpthread   ") 
   0.978 sec ]

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by row
  output C, 4 entries, memory: 1.1 KB

    (2,2) [user-defined value]
    (2,5) [user-defined value]
    (3,2) [user-defined value]
    (3,5) [user-defined value]

 [ GrB_Matrix_nvals 
   5.17e-07 sec ]

============= printing the WildType matrix: output C (10-by-10 with 4 entries)

----------- output C(2,2):

a wildtype scalar:  [this was added]
     -22.0      -10.0        2.0       14.0 
    -972.0      -10.0      802.0     8964.0 
   -3687.0    -1069.0     1249.0    18267.0 
   -2219.5      381.5     2532.5    26733.5 

----------- output C(2,5):

a wildtype scalar:  [this was multiplied]
     -11.0       -5.0        1.0        7.0 
    -561.0       -5.0      401.0      807.0 
   -1111.0       -5.0      801.0     1607.0 
   -1661.0       -5.0     1201.0     2407.0 

----------- output C(3,2):

a wildtype scalar:  [this was multiplied]
     -11.0       -5.0        1.0        7.0 
    -411.0       -5.0      401.0      807.0 
   -2576.0    -1064.0      448.0     1960.0 
   -1211.0       -5.0     1201.0     2407.0 

----------- output C(3,5):

a wildtype scalar:  [this was multiplied]
     -11.0       -5.0        1.0        7.0 
    -561.0       -5.0      401.0      807.0 
   -2876.0    -1064.0      448.0     1960.0 
   -1661.0       -5.0     1201.0     2407.0 

============= that was the WildType matrix output C

------ C<M>=C*C'----------------------------------------

The mask matrix M:

  10x10 GraphBLAS bool matrix, hypersparse by row
  M, no entries, memory: 4.4 KB
  iso value:   1
  pending tuples: 4 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  bool size: 1
    row: 2 col: 2 
    row: 2 col: 3 
    row: 3 col: 2 
    row: 3 col: 3 
  pending operator: implicit 2nd

 [ GrB_mxm (iso wait:M 0 zombies, 4 pending) (iso build) (hyper to sparse) C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 1 ntasks 1 (jit: compile and load) (jit: sh -c "/usr/bin/cc -DGB_JIT_RUNTIME=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/faculty/d/davis/.SuiteSparse/GrB9.0.0/src  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/0f/GB_jit__AxB_dot3__03fe100eee2eee55__wildadd_wildmult.o -c /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/0f/GB_jit__AxB_dot3__03fe100eee2eee55__wildadd_wildmult.c    ; /usr/bin/cc  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/lib/0f/libGB_jit__AxB_dot3__03fe100eee2eee55__wildadd_wildmult.so /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/0f/GB_jit__AxB_dot3__03fe100eee2eee55__wildadd_wildmult.o  -lm -ldl -lgomp -lpthread   ") 
   0.51 sec ]

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by row
  output C, 4 entries, memory: 1.3 KB

    (2,2) [user-defined value]
    (2,3) [user-defined value]
    (3,2) [user-defined value]
    (3,3) [user-defined value]

 [ GrB_Matrix_nvals 
   4.27e-07 sec ]

============= printing the WildType matrix: output C (10-by-10 with 4 entries)

----------- output C(2,2):

a wildtype scalar:  [this was added]
  -38055.0     3563.0    37081.0   335199.0 
-24598430.0  2569038.0 24980906.0 256764874.0 
-47572599.5  5674779.5 49524958.5 506665637.5 
-74305581.8  7500257.8 75016347.2 772037886.8 

----------- output C(2,3):

a wildtype scalar:  [this was added]
  -29331.0    -3057.0    20517.0    44091.0 
-15391281.0 -1321107.0 12266367.0 25853841.0 
-29816722.0 -2251210.0 24351602.0 50954414.0 
-46461397.5 -4100626.5 36817444.5 77735515.5 

----------- output C(3,2):

a wildtype scalar:  [this was added]
  -23933.5     1801.5    22136.5   174771.5 
-5032683.5  -119848.5  3827586.5 31427321.5 
-8035864.0   312888.0  6948040.0 55566392.0 
-15050183.5  -363148.5 11438486.5 93932421.5 

----------- output C(3,3):

a wildtype scalar:  [this was added]
  -20454.0    -2038.0    13678.0    29394.0 
-4488404.0  -856488.0  2292728.0  5441944.0 
-6977436.0  -935044.0  4250548.0  9436140.0 
-13424304.0 -2565388.0  6850828.0 16267044.0 

============= that was the WildType matrix output C
 [ GrB_reduce (jit: compile and load) (jit: sh -c "/usr/bin/cc -DGB_JIT_RUNTIME=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/faculty/d/davis/.SuiteSparse/GrB9.0.0/src  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/b7/GB_jit__reduce__03feee1__wildadd.o -c /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/b7/GB_jit__reduce__03feee1__wildadd.c    ; /usr/bin/cc  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/lib/b7/libGB_jit__reduce__03feee1__wildadd.so /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/b7/GB_jit__reduce__03feee1__wildadd.o  -lm -ldl -lgomp -lpthread   ") 
   0.245 sec ]

a wildtype scalar: sum (first time) [this was added]
 -111773.5      269.5    93412.5   583455.5 
-49510798.5   271594.5 43367587.5 319487980.5 
-92402621.5  2801413.5 85075148.5 622622583.5 
-149241466.8   471094.8 130123106.2 959972867.8 
 [ GrB_reduce 
   1.2e-05 sec ]

a wildtype scalar: sum (again) [this was added]
 -111773.5      269.5    93412.5   583455.5 
-49510798.5   271594.5 43367587.5 319487980.5 
-92402621.5  2801413.5 85075148.5 622622583.5 
-149241466.8   471094.8 130123106.2 959972867.8 
 [ GxB_set (transpose) (in-place transpose) (transpose) (1-thread bucket transpose) (jit: compile and load) (jit: sh -c "/usr/bin/cc -DGB_JIT_RUNTIME=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/faculty/d/davis/.SuiteSparse/GrB9.0.0/src  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/6c/GB_jit__trans_unop__0802ee0ee5__wildtype.o -c /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/6c/GB_jit__trans_unop__0802ee0ee5__wildtype.c    ; /usr/bin/cc  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/lib/6c/libGB_jit__trans_unop__0802ee0ee5__wildtype.so /home/faculty/d/davis/.SuiteSparse/GrB9.0.0/c/6c/GB_jit__trans_unop__0802ee0ee5__wildtype.o  -lm -ldl -lgomp -lpthread   ") 
   0.212 sec ]

C is now stored by column, but it looks just the same to the
GraphBLAS user application.  The difference is opaque, in the
internal data structure.

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by col
  output C, 4 entries, memory: 1.1 KB

    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]

 [ GrB_Matrix_nvals 
   5.4e-07 sec ]

============= printing the WildType matrix: output C (10-by-10 with 4 entries)

----------- output C(2,2):

a wildtype scalar:  [this was added]
  -38055.0     3563.0    37081.0   335199.0 
-24598430.0  2569038.0 24980906.0 256764874.0 
-47572599.5  5674779.5 49524958.5 506665637.5 
-74305581.8  7500257.8 75016347.2 772037886.8 

----------- output C(2,3):

a wildtype scalar:  [this was added]
  -29331.0    -3057.0    20517.0    44091.0 
-15391281.0 -1321107.0 12266367.0 25853841.0 
-29816722.0 -2251210.0 24351602.0 50954414.0 
-46461397.5 -4100626.5 36817444.5 77735515.5 

----------- output C(3,2):

a wildtype scalar:  [this was added]
  -23933.5     1801.5    22136.5   174771.5 
-5032683.5  -119848.5  3827586.5 31427321.5 
-8035864.0   312888.0  6948040.0 55566392.0 
-15050183.5  -363148.5 11438486.5 93932421.5 

----------- output C(3,3):

a wildtype scalar:  [this was added]
  -20454.0    -2038.0    13678.0    29394.0 
-4488404.0  -856488.0  2292728.0  5441944.0 
-6977436.0  -935044.0  4250548.0  9436140.0 
-13424304.0 -2565388.0  6850828.0 16267044.0 

============= that was the WildType matrix output C

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS float matrix, hypersparse by row
  D, no entries, memory: 256 bytes


The matrix D is not wild enough to print.
 [ GrB_apply (shallow-op) 
   3.66e-05 sec ]

  10x10 GraphBLAS int64_t matrix, sparse by row
  E (positional i), 3 entries, memory: 368 bytes

    (2,4)   2
    (2,7)   2
    (3,7)   3

 [ GrB_apply (shallow-op) 
   1.26e-05 sec ]

  10x10 GraphBLAS int64_t matrix, sparse by row
  E (positional j), 3 entries, memory: 368 bytes

    (2,4)   4
    (2,7)   7
    (3,7)   7

 [ GrB_eWiseAdd 
   7.58e-06 sec ]

This is supposed to fail, as a demo of GrB_error:
GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_eWiseAdd_BinaryOp (C, M, accum, add, A, B, desc)
Incompatible type for z=wildadd(x,y):
second input of type [float]
cannot be typecast to y input of type [wildtype]
